#
# File ecmwf.properties
#
# Purpose: Master customization file (OpenECPDS)
#
# (c) Copyright ECMWF 2004-2024 - Laurent Gougeon (syi@ecmwf.int)
#

###########################################################
## Part 1: You may want to change some of these definitions
###########################################################

# The monitor certificate must be saved in the: monitor/conf
# directory with the name you have provided to the following
# hostName parameter, adding the keystore extension. If your
# monitor hostname is  ecpds.meteo.ms, your file name will be
# ecpds.meteo.ms.keystore. The password is the  one you have
# received from the ECaccess registration center.
#
[Login]
hostName=${ecmwf.common.ecaccess.ECaccessInit.getHostName()}
password=${ecmwf.common.ecaccess.ECaccessInit.getPassword()}
service=ECpdsMonitor

# The ECpds daemon to connect to. To  switch  to a different
# daemon, just replace diss.ecmwf.int in the following.
#
masterServer=${master.address}

# If using NAT set the following parameter to the external IP
# address of your Master (the IP address used  by the  Master
# server to connect to the ECcmd daemon). Most  of  the  time
# this is the IP address of your Firewall.
#
externalAddress=${Login[hostName]}

# Address to bind for connections with the internal network
# such as the JMX interface.
#
internalAddress=${monitor.internalAddress}

# HTTPS is probably already running on the host server. If the
# setting below is updated to use the standard port (HTTPS/443)
# don't forget to  previously stop the existing HTTPS daemon
# otherwise the monitor plugin won't be able to bind its port.
#
[Ports]
https=${port.https}
callBack=${port.callback}
master=${port.master}

#
# Note that HTTP is only used to redirect to HTTPS.

# The monitor includes a model for the  management of plugin
# services. A plugin, is a piece of code, handling requests
# and responses flowing through the monitor. By default, the
# following plugins are automatically started:
#
[PluginList]
http=ecmwf.ecpds.master.plugin.http.HttpPlugin@${monitor.lib}/plugin/http

#######################################################################
## Part 2: You probably don't want to change anything beyond this point
#######################################################################

[ECpds]
host=${Login[masterServer]}
port=${Ports[master]}

[Security]
SSLKeyStore=${monitor.etc}/ecpds-monitor.pfx
SSLKeyStorePassword=${keystore.password}

[SocketConfig]
listenAddress=${Login[externalAddress]}
publicAddress=${Login[externalAddress]}
receiveBufferSize=-1
sendBufferSize=-1
soTimeOut=86400000
connectTimeOut=30000
backLog=500
keepAlive=yes
interruptible=no
trace=no

[CallBack]
listenAddress=${Login[internalAddress]}
publicAddress=${Login[internalAddress]}
serverFactory=ecmwf.common.rmi.RMIServerSocketFactory
clientFactory=ecmwf.common.rmi.RMIClientSocketFactory
port=${Ports[callBack]}
keepAlive=yes

[RMIServerSocketFactory]
listenAddress=${Login[internalAddress]}
publicAddress=${Login[internalAddress]}
interruptible=yes
keepAlive=yes

[RMIClientSocketFactory]
listenAddress=${Login[internalAddress]}
publicAddress=${Login[internalAddress]}
interruptible=yes
keepAlive=yes

[Monitor]
activated=${nagios.activated}
delay=120
debug=no
dontSend=no

[Nagios]
host=${nagios.host}
3des=no
key=${nagios.key}

[MonitorPlugin]
listenAddress=${Login[externalAddress]}
enabledProtocols=TLSv1.3,TLSv1.2
statusCalculator=true
statusCalculatorTimeout=15
destinationProductStatusResetterTimeout=20
https=${Ports[https]}
htdocs=${monitor.htdocs}
wantClientAuth=no
checkIsSecure=yes
refreshDelay=20000
production=false
cookie=ecpdsv2
destinationsPerPageOrColumn=46
productsToShowCount=10
productsToShowHeaderCount=50
productsToShowPeriod=168
productsToShowMonitoredOnly=no
productStatusEventMaxAge=7
destinationsPerColumn=25

[GeoLocation]
iconRedCircle=http://maps.google.com/mapfiles/kml/paddle/red-circle.png
iconPinkCircle=http://maps.google.com/mapfiles/kml/paddle/pink-circle.png
iconBlueCircle=http://maps.google.com/mapfiles/kml/paddle/blu-circle.png
iconGreenCircle=http://maps.google.com/mapfiles/kml/paddle/grn-circle.png
iconYellowCircle=http://maps.google.com/mapfiles/kml/paddle/ylw-circle.png
iconWhiteCircle=http://maps.google.com/mapfiles/kml/paddle/wht-circle.png

[DestinationActionForm]
hostForSourceName=${defaultSourceHostId}
masterURLs=${master.urlList}

[MasterManager]
useCache=${monitor.useCache}

[Server]
eventRepository=no

[StorageRepository]
eventSize=20
eventDelay=1000

[Other]
buffer=131072
tmp=${monitor.tmp}

# Allow overriding some options/parameters in this file
#
#include "${monitor.etc}/ecmwf.properties"
