#
# File ecmwf.properties
#
# Purpose: Master customization file (OpenECPDS)
#
# (c) Copyright ECMWF 2004 - Laurent Gougeon (syi@ecmwf.int)
#

###########################################################
## Part 1: You may want to change some of these definitions
###########################################################

[Login]
hostName=${ecmwf.common.ecaccess.ECaccessInit.getHostName()}
password=${ecmwf.common.ecaccess.ECaccessInit.getPassword()}

# Exposed IP address used to bind the public services (ecpds, ftp)
externalAddress=${Login[hostName]}

# Dedicated to data traffic between the internal components (jmx, rmi)
internalAddress=${master.internalAddress}

# Ports for the Master-Server services
[Ports]
ecpds=${port.ecpds}
ftp=${port.ftp}
callBack=${port.callback}

# The master includes a model for the  management of plugin
# services. A plugin, is a piece of code, handling requests
# and responses flowing through the master. By default, the
# following plugins are automatically started:
#
[PluginList]
ecpds=ecmwf.ecpds.master.plugin.ecpds.ECpdsPlugin@${master.lib}/plugin/ecpds.jar,maxConnections=1000,inverseResolution=no
ftp=ecmwf.common.ftpd.FtpPlugin@${master.lib}/plugin/ftp.jar,maxConnections=50,inverseResolution=no

#######################################################################
## Part 2: You probably don't want to change anything beyond this point
#######################################################################

[Server]
transferScheduler=yes
hostCheckScheduler=no
acquisitionScheduler=yes
replicateScheduler=yes
downloadScheduler=yes
backupScheduler=yes
filterScheduler=yes
eventScheduler=yes
transferRepository=yes
ticketRepository=yes
historyRepository=yes
eventRepository=yes
notificationRepository=yes
mailRepository=${mail.activated}
email=
dontRecordTransferActions=yes
dontRecordActions=output,report
monitoringTaskScheduler=no
notifyLocalContainer=no
containersToNotify=ECpdsMonitor/(.*)
attachments=${master.data}/attachments
hostoutputs=${master.data}/hostoutputs
ecauth=ecauth
monitoring=https://${Login[hostName]}
useDataProxy=no
providerMBeanTimeout=180000
geoip2DataFile=${master.conf}/GeoLite2-City.mmdb
defaultTransferGroup=internet

[Operator]
template=$destination[name]: $dataFile[metaTime]-$dataFile[metaStream]($dataFile[timeStep]) -> $dataTransfer[target]($dataFile[formatSize]) $system[message] on $transferMethod[name]://$host[login]@$host[host]($host[nickname];$host[networkCode]) $dataTransfer[comment]

[TransferScheduler]
poolSize=0
queueSize=55
monitoringCache=yes
monitoringTimeout=10

[ProxySocket]
cipherSuites=SSL_RSA_WITH_NULL_MD5
host=${Login[hostName]}

[StorageRepository]
storageRepositoryDelay=45000
storageThreadDelay=45000
historySize=15
historyDelay=1000
eventSize=15
eventDelay=1000
transferSize=25
transferDelay=1000
providerSize=5
providerDelay=1000
ticketSize=1
ticketDelay=45000
notificationSize=25
notificationDelay=45000

[MetaData]
reload=24h
fileName=.*(.xml)
tags=mailGroup:email,ContactInformations:email,technicalContact:email
missingContactsMail=${metadata.missingContactsMail}

[Scheduler]
cacheRatio=80
acquisitionScheduler=1s
maxAcquisitionThreads=140
acquisitionSchedulerJammedTimeout=10m
interruptSlowAcquisitionThread=yes
maximumDurationAcquisitionThread=10m
eventScheduler=1s
maxEventThreads=50
eventSchedulerJammedTimeout=10m
eventScriptFile=${master.etc}/event.js
timeOutEventThread=5m
downloadScheduler=1s
maxDownloadThreads=${retrieval.maxPoolSize}
downloadSchedulerJammedTimeout=10m
maximumDurationDownloadThread=25m
minimumDurationDownloadThread=5m
minimumRateDownloadThread=2359296
interruptSlowDownloadThread=yes
transferScheduler=1s
transferSchedulerJammedTimeout=5m
destinationThread=1s
destinationThreadJammedTimeout=5m
hostCheckScheduler=5m
hostCheckSchedulerJammedTimeout=30m
dataTransferCheck=5m
dataTransferCheckJammedTimeout=30m
filterScheduler=1s
filterSchedulerJammedTimeout=5m
maxFilterThreads=100
backupScheduler=1m
backupSchedulerJammedTimeout=10m
timeOutBackupThread=20m
maxBackupThreads=15
replicateScheduler=1s
replicateSchedulerJammedTimeout=10m
timeOutReplicateThread=20m
maxReplicateThreads=200
maxReplicateThreadsPerMover=15
purgeScheduler=1s
maxPurgeThreads=250
maxProxyThreads=150
removeExpiredDataTransfers=1
removeExpiredRoots=1
updateECUsers=24
updateECUsersTime=00:15:00
purgeDataBase=24
purgeDataBaseTime=00:15:00
exportDataBase=0

[DataBase]
brokerFactory=ecmwf.common.database.BrokerFactoryHibernate
repository=${master.conf}/sql
purge=360
backup=${master.conf}/backup.sql
user=master
password=ecmasdb
logEvents=yes
debugSql=no
protocol=jdbc
#driver=com.mysql.cj.jdbc.Driver
#subProtocol=mysql
driver=org.mariadb.jdbc.Driver
subProtocol=mariadb
alias=${database.alias}
enableStreamingFetch=no
maxIdentityCount=7
maxTransferLife=210

[Security]
jaasModule=ecmwf
ejbUser=${Login[hostName]}
ejbPassword=${Login[password]}
SSLKeyStore=${master.etc}/ecpds-master.pfx
SSLKeyStorePassword=${Login[password]}
#sharedSecret=tt8XqXfZJwBumzAbF2ILs8wcnvh+A2TAG6FI1Py824c=

[CallBack]
listenAddress=${Login[internalAddress]}
publicAddress=${Login[internalAddress]}
serverFactory=ecmwf.common.rmi.RMIServerSocketFactory
clientFactory=ecmwf.common.rmi.RMIClientSocketFactory
port=${Ports[callBack]}
keepAlive=yes

[RMIServerSocketFactory]
listenAddress=${Login[internalAddress]}
publicAddress=${Login[internalAddress]}
interruptible=yes
keepAlive=yes

[RMIClientSocketFactory]
listenAddress=${Login[internalAddress]}
publicAddress=${Login[internalAddress]}
interruptible=yes
keepAlive=yes

[SocketConfig]
listenAddress=${Login[externalAddress]}
publicAddress=${Login[externalAddress]}
receiveBufferSize=-1
sendBufferSize=-1
soTimeOut=86400000
connectTimeOut=30000
backLog=10000
keepAlive=yes
interruptible=no
trace=no

[Mail]
host=${mail.host}
user=${mail.user}

[OpsViewManager]
activated=${opsview.activated}
urlLogin=https://${opsview.host}/rest/login
urlHost=https://${opsview.host}/rest/config/host
urlReload=https://${opsview.host}/rest/reload
urlDetail=https://${opsview.host}/rest/detail
filterName=ECPDS_Destinations
user=grid-apiconfig
password=Che1Aesh
trustAllCerts=yes

[Monitor]
activated=no
delay=120
debug=no
dontSend=no

[ECpdsPlugin]
listenAddress=${Login[externalAddress]}
port=${Ports[ecpds]}
soTimeOut=600000
checkPort=no
resetDataTransferSchedulesByGroup=yes

[RequestParser]
logRequests=yes
useParser=no

[FtpPlugin]
listenAddress=${Login[externalAddress]}
port=${Ports[ftp]}
soTimeOut=600000
dataTimeOut=600000
passive=yes
extended=yes
ext=
tail=FTP Admin Interface
welcome=${master.conf}/ftp/welcome.txt
browser=${master.conf}/ftp/browser.txt
help=${master.conf}/ftp/help.txt
hidden=
extended=no

[FtpDomainList]
attachments=attachments:
destinations=destinations:
countries=countries:
hosts=hosts:
data=data:
types=types:
*=*

[FTPPassiveSocket]
privilegedLocalPort=yes
minPrivilegedPort=50000
maxPrivilegedPort=60000
soTimeOut=300000

[FTPActiveSocket]
soTimeOut=7200000
reuseAddress=yes

[Other]
buffer=131072
tmp=${master.tmp}
dontCheckIp=yes

# Allow overriding some options/parameters in this file
#
#include "${master.etc}/ecmwf.properties"
