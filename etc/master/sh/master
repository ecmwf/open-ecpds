#!/bin/sh

#
# File master
#
# Purpose: Master-Server startup script (OpenECPDS)
#
# (c) Copyright ECMWF 2003-2022 - Laurent Gougeon (syi@ecmwf.int)
#

##########################
## Load configuration file
##########################
source /usr/local/ecpds/master/sh/ecenv

##########################################
## Load local configuration files from etc
##########################################
for envfile in default/master.cnf master.cnf; do
  if [ -f /etc/ecpds/$envfile ]; then
    source /etc/ecpds/$envfile
  fi
done

###########################
## Java command and options
###########################
JAVA_OPTS="-server -XX:+CrashOnOutOfMemoryError -XX:+HeapDumpOnOutOfMemoryError \
  -XX:HeapDumpPath='$dir_log' -Xms$ALLOCATED_MEMORY -Xmx$ALLOCATED_MEMORY \
  -Xlog:gc*:file='$dir_log/master-gc.log':time,uptime,tags:filesize=100M,filecount=5 \
  -XX:+DisableExplicitGC "$JAVA_OPTS

############################
## Set the starter classpath
############################
for n in `$find $dir_lib/*.jar`; do
  STARTERPATH=$STARTERPATH":"$n
done

######################################################
## Local options (to be configured on each data mover)
######################################################
JAVA_OPTS=$JAVA_OPTS" -Decaccess.hostName='$EXTERNAL_ADDRESS'"
JAVA_OPTS=$JAVA_OPTS" -Dmaster.internalAddress='$INTERNAL_ADDRESS'"
JAVA_OPTS=$JAVA_OPTS" -Decaccess.address='$ECACCESS_ADDRESS'"
JAVA_OPTS=$JAVA_OPTS" -Deccmd.address='$ECCMD_ADDRESS'"
JAVA_OPTS=$JAVA_OPTS" -Ddatabase.alias='$DATABASE_ALIAS'"
JAVA_OPTS=$JAVA_OPTS" -Dhibernate.minPoolSize='$DATABASE_MIN_SPOOL_SIZE'"
JAVA_OPTS=$JAVA_OPTS" -Dhibernate.maxPoolSize='$DATABASE_MAX_SPOOL_SIZE'"
JAVA_OPTS=$JAVA_OPTS" -Dretrieval.maxPoolSize='$RETRIEVAL_MAX_SPOOL_SIZE'"
JAVA_OPTS=$JAVA_OPTS" -Dmetadata.missingContactsMail='$METADATA_MISSING_CONTACTS_MAIL'"
JAVA_OPTS=$JAVA_OPTS" -Dport.ecpds='$PORT_ECPDS'"
JAVA_OPTS=$JAVA_OPTS" -Dport.ftp='$PORT_FTP'"
JAVA_OPTS=$JAVA_OPTS" -Dport.callback='$PORT_CALLBACK'"
JAVA_OPTS=$JAVA_OPTS" -Dport.eccmd='$PORT_ECCMD'"

#######################################################
## Deal with roll-over strategy and level for log files
#######################################################
[ ! -z "$LOG_ROLLOVER_SIZE_MAX" ] && JAVA_OPTS=$JAVA_OPTS" -Dlog.rollover.size.max='$LOG_ROLLOVER_SIZE_MAX'"
[ ! -z "$LOG_ROLLOVER_SIZE_KEEP" ] && JAVA_OPTS=$JAVA_OPTS" -Dlog.rollover.size.keep='$LOG_ROLLOVER_SIZE_KEEP'"
[ ! -z "$LOG_ROLLOVER_DATE_PATTERN" ] && JAVA_OPTS=$JAVA_OPTS" -Dlog.rollover.date.pattern='$LOG_ROLLOVER_DATE_PATTERN'"
[ ! -z "$LOG_ROLLOVER_DATE_KEEP" ] && JAVA_OPTS=$JAVA_OPTS" -Dlog.rollover.date.keep='$LOG_ROLLOVER_DATE_KEEP'"
[ ! -z "$LOG_LEVEL" ] && JAVA_OPTS=$JAVA_OPTS" -Dlog.ecmwf.level='$LOG_LEVEL'"

#################################
## Deal with SMTP (notifications)
#################################
if [ ! -z "$SMTP_HOST" -a ! -z "$SMTP_HOST" ]; then
  JAVA_OPTS=$JAVA_OPTS" -Dsmtp.activated=yes"
  JAVA_OPTS=$JAVA_OPTS" -Dsmtp.host='$SMTP_HOST'"
  JAVA_OPTS=$JAVA_OPTS" -Dsmtp.from='$SMTP_FROM'"
fi

####################################
## Deal with Opsview (configuration)
####################################
if [ ! -z "$OPSVIEW_HOST" ]; then
  JAVA_OPTS=$JAVA_OPTS" -Dopsview.activated=yes"
  JAVA_OPTS=$JAVA_OPTS" -Dopsview.host='$OPSVIEW_HOST'"
fi

#####################
## Export directories
#####################
JAVA_OPTS=$JAVA_OPTS" -Dmaster.etc='$dir_etc'"
JAVA_OPTS=$JAVA_OPTS" -Dmaster.conf='$dir_conf'"
JAVA_OPTS=$JAVA_OPTS" -Dmaster.lib='$dir_lib'"
JAVA_OPTS=$JAVA_OPTS" -Dmaster.sh='$dir_sh'"
JAVA_OPTS=$JAVA_OPTS" -Dmaster.log='$dir_log'"
JAVA_OPTS=$JAVA_OPTS" -Dmaster.tmp='$dir_tmp'"
JAVA_OPTS=$JAVA_OPTS" -Dmaster.data='$dir_data'"

#################
## Global options
#################
JAVA_OPTS=$JAVA_OPTS" -Decmwf.properties='$dir_conf/ecmwf.properties'"
JAVA_OPTS=$JAVA_OPTS" -Dlog4j2.configurationFile='$dir_conf/log4j2.properties'"
JAVA_OPTS=$JAVA_OPTS" -Dlog4j2.contextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector"
JAVA_OPTS=$JAVA_OPTS" -Djava.security.policy='$dir_conf/ecmwf.policy'"
JAVA_OPTS=$JAVA_OPTS" -Djava.io.tmpdir='$dir_tmp'"
JAVA_OPTS=$JAVA_OPTS" -Djava.awt.headless=true"
JAVA_OPTS=$JAVA_OPTS" -Dfile.encoding=UTF8"
JAVA_OPTS=$JAVA_OPTS" -Duser.timezone=GMT"

####################
## Hibernate options
####################
JAVA_OPTS=$JAVA_OPTS" -Dorg.jboss.logging.provider=log4j"
JAVA_OPTS=$JAVA_OPTS" -Dhibernate.cfg.xml='$dir_conf/hibernate.cfg.xml'"
JAVA_OPTS=$JAVA_OPTS" -Dhibernate.hbm.xml='$dir_conf/hibernate.hbm.xml'"

##################
## Starter options
##################
JAVA_OPTS=$JAVA_OPTS" -Decmwf.common.starter.properties='$dir_conf/starter.properties'"
JAVA_OPTS=$JAVA_OPTS" -Decmwf.common.starter.listenAddress='$INTERNAL_ADDRESS'"
JAVA_OPTS=$JAVA_OPTS" -Decmwf.common.starter.port='$PORT_JMX'"
JAVA_OPTS=$JAVA_OPTS" -Decmwf.common.starter.name=ecmwf.ecpds.master.MasterServer"
JAVA_OPTS=$JAVA_OPTS" -Decmwf.common.starter.domain=ECpdsMaster"
JAVA_OPTS=$JAVA_OPTS" -Decmwf.common.starter.conf='$dir_conf'"
JAVA_OPTS=$JAVA_OPTS" -Decmwf.common.starter.ext='$dir_lib/ext'"
JAVA_OPTS=$JAVA_OPTS" -Decmwf.common.starter.tmp='$dir_tmp'"
JAVA_OPTS=$JAVA_OPTS" -Decmwf.common.starter.debug=no"

##############
## RMI options
##############
JAVA_OPTS=$JAVA_OPTS" -Djava.rmi.server.randomIDs=true"
JAVA_OPTS=$JAVA_OPTS" -Djava.rmi.server.disableHttp=true"
JAVA_OPTS=$JAVA_OPTS" -Djava.rmi.server.useCodebaseOnly=true"

################################################################
## Deal with the remote stubs for locally created remote objects
################################################################
if [ "$INTERNAL_ADDRESS" != "0.0.0.0" -a "$INTERNAL_ADDRESS" != "::" ]; then
  JAVA_OPTS=$JAVA_OPTS" -Djava.rmi.server.hostname='$INTERNAL_ADDRESS'"
fi

#############################################
## Remove reflective access warning for sling
#############################################
JAVA_OPTS=$JAVA_OPTS" --add-opens java.base/java.lang=ALL-UNNAMED"

#########################################
## Let's find out if the pid is available
#########################################
if [ -z "$CONTAINER" ]; then
  if [ -f "$dir_tmp/master.pid" ]; then
    master=`$cat $dir_tmp/master.pid`
  fi
else
  master=`$pidof java`
fi

######################
## Is is still running
######################
if [ -n "$master" ] && [ "`$ps -q $master -o comm=`" != "java" ]; then
  if [ -z "$CONTAINER" ]; then
    $echo "Removing leftover master.[pid|ini] (pid=$master)"
    $rm -f $dir_tmp/master.pid
    $rm -f $dir_tmp/master.ini
  fi
  master=
fi

###############################
## Perform the requested action
###############################
case "$1" in
  ##########################
  ## Start the master daemon
  ##########################
  start)
    if [ "$master" != "" ]; then
      $echo "The master daemon is already running (pid=$master)"
      exit 1
    fi
    $ulimit unlimited
    if [ -z "$CONTAINER" ]; then
      $echo "Starting the master daemon"
      $echo $JAVA_OPTS -cp "$STARTERPATH" ecmwf.common.starter.Starter > $dir_tmp/master.ini
      $nohup $java @$dir_tmp/master.ini >> $dir_log/master.output 2>&1 &
      $echo $! > $dir_tmp/master.pid
      exit 0
    else
      $echo "Executing the master process (container=$CONTAINER)"
      JAVA_OPTS=$JAVA_OPTS" -Dlog.console.threshold.level=$CONSOLE_LOG_LEVEL"
      $echo $JAVA_OPTS -cp "$STARTERPATH" ecmwf.common.starter.Starter > $dir_tmp/master.ini
      exec $java @$dir_tmp/master.ini 2>&1
    fi
    ;;
  #########################
  ## Stop the master daemon
  #########################
  stop)
    if [ -n "$CONTAINER" ]; then
      $echo "Operation not permitted from container"
      exit 1
    fi
    if [ "$master" != "" ]; then
      $echo "Stopping the master daemon"
      $kill -9 $master > /dev/null 2>&1
      $rm -f $dir_tmp/master.pid
      $rm -f $dir_tmp/master.ini
      exit 0
    else
      $echo "The master daemon is NOT running"
      exit 1
    fi
    ;;
  ############################
  ## Restart the master daemon
  ############################
  restart)
    if [ -n "$CONTAINER" ]; then
      $echo "Operation not permitted from container"
      exit 1
    fi
    $0 stop
    $0 start
    ;;
  #########################
  ## Dump the master daemon
  #########################
  dump)
    if [ "$master" != "" ]; then
      $echo "Creating master thread dump (~2s)"
      $kill -QUIT $master > /dev/null 2>&1
      $sleep 2
      exit 0
    else
      $echo "The master daemon is NOT running"
      exit 1
    fi
    ;;
  ##########################
  ## Check the master daemon
  ##########################
  status)
    if [ "$master" != "" ]; then
      fdc=`$ls /proc/$master/fd | $wc -l`
      $echo "The master daemon is running (pid=$master,fdc=$fdc)"
      exit 0
    else
      $echo "The master daemon is NOT running"
      exit 1
    fi
    ;;
  ###########################
  ## Check the master version
  ###########################
  version)
    VERSION=`$java -cp $dir_lib/ext/master.jar ecmwf.common.version.Version`
    $echo "The master version is $VERSION"
    ;;
  ###############################
  ## Unknown option: display help
  ###############################
  *)
    if [ "$1" != "" ]; then
      $echo "unknown option "$1
    fi
    $echo "usage: master [start|stop|restart|dump|status|version]"
    exit 1
    ;;
esac
