#!/bin/sh

#
# File mover
#
# Purpose: Data-Mover startup script (OpenECPDS)
#
# (c) Copyright ECMWF 2003-2022 - Laurent Gougeon (syi@ecmwf.int)
#

##########################
## Load configuration file
##########################
source /usr/local/ecpds/mover/sh/ecenv

##########################################
## Load local configuration files from etc
##########################################
for envfile in default/mover.cnf mover.cnf; do
  if [ -f /etc/ecpds/$envfile ]; then
    source /etc/ecpds/$envfile
  fi
done

####################################################
## Set memory options from ALLOCATED_MEMORY if unset
####################################################
if [ -z "$INITIAL_MEMORY" ] && [ -z "$MAX_MEMORY" ] && [ -z "$SOFT_MAX_MEMORY" ] && [ -n "$ALLOCATED_MEMORY" ]; then
  INITIAL_MEMORY="$ALLOCATED_MEMORY"
  MAX_MEMORY="$ALLOCATED_MEMORY"
  SOFT_MAX_MEMORY="$ALLOCATED_MEMORY"
fi

###########################
## Java command and options
###########################
JAVA_OPTS="-XX:+CrashOnOutOfMemoryError -XX:+HeapDumpOnOutOfMemoryError \
  -XX:+UseZGC -Xms$INITIAL_MEMORY -Xmx$MAX_MEMORY -XX:SoftMaxHeapSize=$SOFT_MAX_MEMORY \
  -XX:HeapDumpPath='$dir_log' -Xlog:gc*:file='$dir_log/mover-gc.log':time,uptime,tags:filesize=100M,filecount=5 \
  -XX:+DisableExplicitGC -XX:+UseCompressedOops -XX:+UseCompressedClassPointers "$JAVA_OPTS

####################
## Set the classpath
####################
for n in `$find $dir_lib/*.jar`; do
  STARTERPATH=$STARTERPATH":"$n
done

######################################################
## Local options (to be configured on each data mover)
######################################################
JAVA_OPTS=$JAVA_OPTS" -Decaccess.hostName='$EXTERNAL_ADDRESS'"
JAVA_OPTS=$JAVA_OPTS" -Dmover.internalAddress='$INTERNAL_ADDRESS'"
JAVA_OPTS=$JAVA_OPTS" -Dmaster.address='$MASTER_ADDRESS'"
JAVA_OPTS=$JAVA_OPTS" -Dkeystore.password='$KEYSTORE_PASSWORD'"
JAVA_OPTS=$JAVA_OPTS" -Dmover.title='$MOVER_TITLE'"
JAVA_OPTS=$JAVA_OPTS" -Dmover.color='$MOVER_COLOR'"
JAVA_OPTS=$JAVA_OPTS" -Dmover.operation='$OPERATION'"
JAVA_OPTS=$JAVA_OPTS" -Dport.http='$PORT_HTTP'"
JAVA_OPTS=$JAVA_OPTS" -Dport.https='$PORT_HTTPS'"
JAVA_OPTS=$JAVA_OPTS" -Dport.mqtt='$PORT_MQTT'"
JAVA_OPTS=$JAVA_OPTS" -Dport.mqtts='$PORT_MQTTS'"
JAVA_OPTS=$JAVA_OPTS" -Dport.ecproxy='$PORT_ECPROXY'"
JAVA_OPTS=$JAVA_OPTS" -Dport.ftp='$PORT_FTP'"
JAVA_OPTS=$JAVA_OPTS" -Dport.ssh='$PORT_SSH'"
JAVA_OPTS=$JAVA_OPTS" -Dport.master='$PORT_MASTER'"
JAVA_OPTS=$JAVA_OPTS" -Dport.callback='$PORT_CALLBACK'"

#######################################################
## Deal with roll-over strategy and level for log files
#######################################################
[ ! -z "$LOG_ROLLOVER_SIZE_MAX" ] && JAVA_OPTS=$JAVA_OPTS" -Dlog.rollover.size.max='$LOG_ROLLOVER_SIZE_MAX'"
[ ! -z "$LOG_ROLLOVER_SIZE_KEEP" ] && JAVA_OPTS=$JAVA_OPTS" -Dlog.rollover.size.keep='$LOG_ROLLOVER_SIZE_KEEP'"
[ ! -z "$LOG_LEVEL" ] && JAVA_OPTS=$JAVA_OPTS" -Dlog.ecmwf.level='$LOG_LEVEL'"

#####################
## Export directories
#####################
JAVA_OPTS=$JAVA_OPTS" -Dmover.etc='$dir_etc'"
JAVA_OPTS=$JAVA_OPTS" -Dmover.dir='$dir_mover'"
JAVA_OPTS=$JAVA_OPTS" -Dmover.htdocs='$dir_htdocs'"
JAVA_OPTS=$JAVA_OPTS" -Dmover.conf='$dir_conf'"
JAVA_OPTS=$JAVA_OPTS" -Dmover.lib='$dir_lib'"
JAVA_OPTS=$JAVA_OPTS" -Dmover.sh='$dir_sh'"
JAVA_OPTS=$JAVA_OPTS" -Dmover.log='$dir_log'"
JAVA_OPTS=$JAVA_OPTS" -Dmover.tmp='$dir_tmp'"
JAVA_OPTS=$JAVA_OPTS" -Dmover.mqtt='$dir_mqtt'"
JAVA_OPTS=$JAVA_OPTS" -Dmover.data='$dir_data'"

#################
## Global options
#################
JAVA_OPTS=$JAVA_OPTS" -Decmwf.properties='$dir_conf/ecmwf.properties'"
JAVA_OPTS=$JAVA_OPTS" -Dlog4j2.configurationFile='$dir_conf/log4j2.properties'"
JAVA_OPTS=$JAVA_OPTS" -Dlog4j2.contextSelector=org.apache.logging.log4j.core.async.AsyncLoggerContextSelector"
JAVA_OPTS=$JAVA_OPTS" -Dlogback.configurationFile='$dir_conf/logback.xml'"
JAVA_OPTS=$JAVA_OPTS" -Djava.security.policy='$dir_conf/ecmwf.policy'"
JAVA_OPTS=$JAVA_OPTS" -Djava.jni.path='$dir_jni'"
JAVA_OPTS=$JAVA_OPTS" -Djava.io.tmpdir='$dir_tmp'"
JAVA_OPTS=$JAVA_OPTS" -Djava.awt.headless=true"
JAVA_OPTS=$JAVA_OPTS" -Dfile.encoding=UTF8"
JAVA_OPTS=$JAVA_OPTS" -Duser.timezone=GMT"

##################
## Starter options
##################
JAVA_OPTS=$JAVA_OPTS" -Decmwf.common.starter.properties='$dir_conf/starter.properties'"
JAVA_OPTS=$JAVA_OPTS" -Decmwf.common.starter.listenAddress='$INTERNAL_ADDRESS'"
JAVA_OPTS=$JAVA_OPTS" -Decmwf.common.starter.port='$PORT_JMX'"
JAVA_OPTS=$JAVA_OPTS" -Decmwf.common.starter.name=ecmwf.ecpds.mover.MoverServer"
JAVA_OPTS=$JAVA_OPTS" -Decmwf.common.starter.domain=ECpdsMover"
JAVA_OPTS=$JAVA_OPTS" -Decmwf.common.starter.conf='$dir_conf'"
JAVA_OPTS=$JAVA_OPTS" -Decmwf.common.starter.ext='$dir_lib/ext'"
JAVA_OPTS=$JAVA_OPTS" -Decmwf.common.starter.tmp='$dir_tmp'"
JAVA_OPTS=$JAVA_OPTS" -Decmwf.common.starter.debug=no"

##############
## TTL options
##############
JAVA_OPTS=$JAVA_OPTS" -Dsun.net.inetaddr.ttl=120"
JAVA_OPTS=$JAVA_OPTS" -Dsun.net.inetaddr.negative.ttl=10"

##############
## RMI options
##############
JAVA_OPTS=$JAVA_OPTS" -Djava.rmi.server.randomIDs=true"
JAVA_OPTS=$JAVA_OPTS" -Djava.rmi.server.disableHttp=true"
JAVA_OPTS=$JAVA_OPTS" -Djava.rmi.server.useCodebaseOnly=true"

################################################################
## Deal with the remote stubs for locally created remote objects
################################################################
if [ "$INTERNAL_ADDRESS" != "0.0.0.0" -a "$INTERNAL_ADDRESS" != "::" ]; then
  JAVA_OPTS=$JAVA_OPTS" -Djava.rmi.server.hostname='$INTERNAL_ADDRESS'"
fi

#############################################
## Remove reflective access warning for sling
#############################################
JAVA_OPTS=$JAVA_OPTS" --add-opens java.base/java.lang=ALL-UNNAMED"
JAVA_OPTS=$JAVA_OPTS" --add-opens java.base/sun.security.ssl=ALL-UNNAMED"

############################################################################
## java.lang.System::load required by com.oracle.truffle.polyglot.JDKSupport
############################################################################
JAVA_OPTS=$JAVA_OPTS" --enable-native-access=ALL-UNNAMED"

#########################################
## Let's find out if the pid is available
#########################################
if [ -z "$CONTAINER" ]; then
  if [ -f "$dir_tmp/mover.pid" ]; then
    mover=`$cat $dir_tmp/mover.pid`
  fi
else
  mover=`$pidof java`
fi

######################
## Is is still running
######################
if [ -n "$mover" ] && [ "`$ps -q $mover -o comm=`" != "java" ]; then
  if [ -z "$CONTAINER" ]; then
    $echo "Removing leftover mover.[pid|ini] (pid=$mover)"
    $rm -f $dir_tmp/mover.pid
    $rm -f $dir_tmp/mover.ini
  fi
  mover=
fi

#################################
## Create the volumes if required
#################################
if [ `$find $dir_data -maxdepth 1 -name "volume*" 2>/dev/null | $wc -l` -eq 0 ]; then
  $echo "Creating volumes"
  pushd $dir_data
  i=1
  for dir in `$find * -maxdepth 0 -type d 2>/dev/null | $sort -V`; do
    if [ "$dir" != "lost+found" ]; then
      $ln -s $dir volume$[$i - 1]
      i=$((i+1))
    fi
  done
  popd
fi

###############################
## Perform the requested action
###############################
case "$1" in
  #########################
  ## Start the mover daemon
  #########################
  start)
    if [ "$mover" != "" ]; then
      $echo "The mover daemon is already running (pid=$mover)"
      exit 1
    fi
    $ulimit unlimited
    $echo "Cleaning tmp directory"
    $rm -fr $dir_tmp/jetty-*-ecpds_war-* $dir_tmp/sftp.*.tmp
    if [ -z "$CONTAINER" ]; then
      $echo "Starting the mover daemon"
      $echo $JAVA_OPTS -cp "$STARTERPATH" ecmwf.common.starter.Starter > $dir_tmp/mover.ini
      $nohup $java @$dir_tmp/mover.ini >> $dir_log/mover.output 2>&1 &
      $echo $! > $dir_tmp/mover.pid
      exit 0
    else
      $echo "Executing the mover process (container=$CONTAINER)"
      JAVA_OPTS=$JAVA_OPTS" -Dlog.console.threshold.level=$CONSOLE_LOG_LEVEL"
      $echo $JAVA_OPTS -cp "$STARTERPATH" ecmwf.common.starter.Starter > $dir_tmp/mover.ini
      exec $java @$dir_tmp/mover.ini 2>&1
    fi
    ;;
  ########################
  ## Stop the mover daemon
  ########################
  stop)
    if [ -n "$CONTAINER" ]; then
      $echo "Operation not permitted from container"
      exit 1
    fi
    if [ "$mover" != "" ]; then
      $echo "Stopping the mover daemon (~3s)"
      $kill -9 $mover > /dev/null 2>&1
      $rm -f $dir_tmp/mover.pid
      $rm -f $dir_tmp/mover.ini
      $sleep 3
      if [ -f "$dir_log/mover.output" ]; then
        $echo "Archiving mover.output"
        $mv $dir_log/mover.output $dir_log/mover.output.`date +%b%d.%T`
      fi
      exit 0
    else
      $echo "The mover daemon is NOT running"
      exit 1
    fi
    ;;
  ###########################
  ## Restart the mover daemon
  ###########################
  restart)
    if [ -n "$CONTAINER" ]; then
      $echo "Operation not permitted from container"
      exit 1
    fi
    $0 stop
    $0 start
    ;;
  ###############################
  ## Dump threads to mover output
  ###############################
  dump)
    if [ "$mover" != "" ]; then
      $echo "Creating mover thread dump (~2s)"
      $kill -QUIT $mover > /dev/null 2>&1
      $sleep 2
      exit 0
    else
      $echo "The mover daemon is NOT running"
      exit 1
    fi
    ;;
  #########################
  ## Check the mover daemon
  #########################
  status)
    if [ "$mover" != "" ]; then
      fdc=`$ls /proc/$mover/fd | $wc -l`
      $echo "The mover daemon is running (ops=$OPERATION,pid=$mover,fdc=$fdc)"
      exit 0
    else
      $echo "The mover daemon is NOT running"
      exit 1
    fi
    ;;
  ##########################
  ## Check the mover version
  ##########################
  version)
    VERSION=`$java -cp $dir_lib/ext/mover.jar ecmwf.common.version.Version`
    $echo "The mover version is $VERSION"
    ;;
  ###############################
  ## Unknown option: display help
  ###############################
  *)
    if [ "$1" != "" ]; then
      $echo "Unknown option "$1
    fi
    $echo "Usage: mover [start|stop|restart|dump|status|version]"
    exit 1
    ;;
esac
