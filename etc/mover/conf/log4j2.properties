#
# File log4j2.properties
#
# Purpose: log customization file for the OpenECPDS Mover Server
#
# (c) Copyright ECMWF 2021 - Laurent Gougeon
#

# Name of the configuration
name = PropertiesConfig

# Internal Log4j events that should be logged to the console
#
status = error
dest = err

# Automatically detect changes to this file (in seconds)
#
monitorInterval = 30

# Declaration of all appenders
#
appenders = mover,console

# Define the MoverFile appender (general purpose)
#
appender.mover.type = RollingFile
appender.mover.name = MoverFile
appender.mover.fileName = ${sys:mover.log}/mover.log
appender.mover.filePattern = ${sys:mover.log}/mover.log.%i
appender.mover.layout.type = PatternLayout
appender.mover.layout.pattern = [%d{dd/MM/yyyy HH:mm:ss,SSS}] %-5p [%t] [%c{2}] %x %m%n
appender.mover.policies.type = Policies
appender.mover.policies.size.type = SizeBasedTriggeringPolicy
appender.mover.policies.size.size = ${sys:log.rollover.size.max:-100MB}
appender.mover.strategy.type = DefaultRolloverStrategy
appender.mover.strategy.fileIndex = min
appender.mover.strategy.max = ${sys:log.rollover.size.keep:-100}

# Define the MoverToConsole appender
#
appender.console.type = Console
appender.console.name = MoverToConsole
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = [%d{dd/MM/yyyy HH:mm:ss,SSS}] %-5p [%t] [%c{2}] %x %m%n
appender.console.filter.threshold.type = ThresholdFilter
appender.console.filter.threshold.level = ${sys:log.console.threshold.level:-off}

# Declaration of all loggers
#
loggers = jetty,wink,maverick,amazonaws,s3upload,ecmwf

# Define the jetty logger
#
logger.jetty.name = org.eclipse.jetty
logger.jetty.level = ${sys:log.jetty.level:-warn}
logger.jetty.additivity = false
logger.jetty.appenderRef.mover.ref = MoverFile
logger.jetty.appenderRef.console.ref = MoverToConsole

# Define the wink logger (rest api)
#
logger.wink.name = org.apache.wink
logger.wink.level = ${sys:log.wink.level:-warn}
logger.wink.additivity = false
logger.wink.appenderRef.mover.ref = MoverFile
logger.wink.appenderRef.console.ref = MoverToConsole

# Define the maverick logger (ssh server)
#
logger.maverick.name = com.maverick
logger.maverick.level = ${sys:log.maverick.level:-warn}
logger.maverick.additivity = false
logger.maverick.appenderRef.mover.ref = MoverFile
logger.maverick.appenderRef.console.ref = MoverToConsole

# Define the amazonaws logger (s3)
#
logger.amazonaws.name = com.amazonaws
logger.amazonaws.level = ${sys:log.amazonaws.level:-warn}
logger.amazonaws.additivity = false
logger.amazonaws.appenderRef.mover.ref = MoverFile
logger.amazonaws.appenderRef.console.ref = MoverToConsole

# Define the s3upload logger (s3upload)
#
logger.s3upload.name = alex.mojaki.s3upload
logger.s3upload.level = ${sys:log.s3upload.level:-warn}
logger.s3upload.additivity = false
logger.s3upload.appenderRef.mover.ref = MoverFile
logger.s3upload.appenderRef.console.ref = MoverToConsole

# Define the ecmwf logger (ecmwf)
#
logger.ecmwf.name = ecmwf
logger.ecmwf.level = ${sys:log.ecmwf.level:-info}
logger.ecmwf.additivity = false
logger.ecmwf.includeLocation = ${sys:log.ecmwf.includeLocation:-false}
logger.ecmwf.appenderRef.mover.ref = MoverFile
logger.ecmwf.appenderRef.console.ref = MoverToConsole

# Define the root logger (everything)
#
rootLogger.level = ${sys:log.root.level:-error}
rootLogger.appenderRef.mover.ref = MoverFile
rootLogger.appenderRef.console.ref = MoverToConsole
