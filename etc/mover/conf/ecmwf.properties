#
# File ecmwf.properties
#
# Purpose: Data Mover configuration file (OpenECPDS)
#
# (c) Copyright ECMWF 2011 - Laurent Gougeon (syi@ecmwf.int)
#

# The mover name (as declared in the Database) is set in the
# mover script with the following parameter:
#
# => ecaccess.hostName: Data Mover name
#
# The password is automatically generated from this
# name in the GatewayInit class.
#
[Login]
hostName=${ecmwf.common.ecaccess.ECaccessInit.getHostName()}
password=${ecmwf.common.ecaccess.ECaccessInit.getPassword()}

# The ecpds.ecmwf.int host is used  by default. To switch to
# a different ecpds daemon, just  replace ecpds.ecmwf.int in
# the following.
#
masterServer=${master.address}

# If using NAT set the following parameter to the external IP
# address of your host (the IP address used  by the  mover
# server to connect to the ecpds daemon). Most  of  the  time
# this is the IP address of your Firewall.
#
externalAddress=${Login[hostName]}

# Address to bind for connections with the internal network
# such as the MasterServer and the hpc.
#
internalAddress=${mover.internalAddress}

# Standard daemons are already  running  on the  server.  If
# settings below are updated  to use standard  port (such as
# 443 or 22),  don't forget to  previously stop the existing
# daemons, otherwise  the mover  plugin won't be able to
# bind the ports.
#
[Ports]
http=${port.http}
https=${port.https}
mqtt=${port.mqtt}
mqtts=${port.mqtts}
ecproxy=${port.ecproxy}
ftp=${port.ftp}
ssh=${port.ssh}
master=${port.master}
callBack=${port.callback}

# The server includes a model for the  management of plugin
# services. A plugin, is a piece of code, handling requests
# and responses flowing through the server. By default, the
# following plugins are automatically started:
#
[PluginList]
http=ecmwf.ecpds.mover.plugin.http.HttpPlugin@${mover.lib}/plugin/http
mqtt=ecmwf.ecpds.mover.plugin.mqtt.MqttPlugin@${mover.lib}/plugin/mqtt
ftp=ecmwf.common.ftpd.FtpPlugin@${mover.lib}/plugin/ftp.jar,maxConnections=2000,inverseResolution=no
ecproxy=ecmwf.ecpds.mover.plugin.ecproxy.ECproxyPlugin@${mover.lib}/plugin/ecproxy.jar,maxConnections=2000,inverseResolution=no

#######################################################################
## Part 2: You probably don't want to change anything beyond this point
#######################################################################

[MasterServer]
host=${Login[masterServer]}
port=${Ports[master]}

#[MoverProxy]
#httpProxy=
#httpMover=
#connectTimeout=30000

[Security]
SSLKeyStore=${mover.etc}/ecpds-mover.pfx
SSLKeyStorePassword=${keystore.password}
#sharedSecret=tt8XqXfZJwBumzAbF2ILs8wcnvh+A2TAG6FI1Py824c=

[Mover]
operational=${mover.operation}

[Scheduler]
transferRepository=1s
transferRepositoryJammedTimeout=5m
downloadRepository=1s
downloadRepositoryJammedTimeout=5m

[CallBack]
listenAddress=${Login[internalAddress]}
publicAddress=${Login[internalAddress]}
serverFactory=ecmwf.common.rmi.RMIServerSocketFactory
clientFactory=ecmwf.common.rmi.RMIClientSocketFactory
port=${Ports[callBack]}
keepAlive=yes

[RMIServerSocketFactory]
listenAddress=${Login[internalAddress]}
publicAddress=${Login[internalAddress]}
interruptible=yes
keepAlive=yes

[RMIClientSocketFactory]
listenAddress=${Login[internalAddress]}
publicAddress=${Login[internalAddress]}
interruptible=yes
keepAlive=yes

[SocketConfig]
listenAddress=${Login[externalAddress]}
publicAddress=${Login[externalAddress]}
receiveBufferSize=-1
sendBufferSize=-1
soTimeOut=86400000
connectTimeOut=30000
backLog=10000
keepAlive=yes
trace=yes

[ProxySocket]
plainText=yes

[Monitor]
activated=no
delay=120
debug=no
dontSend=no

[HttpPlugin]
http=${Ports[http]}
https=${Ports[https]}
htdocs=${mover.htdocs}
listenAddress=${Login[externalAddress]}
enabledProtocols=TLSv1.3,TLSv1.2
homeFile=${mover.conf}/http/home.html
portalFile=${mover.conf}/http/portal.html

[MqttPlugin]
mqtt=${Ports[mqtt]}
mqtts=${Ports[mqtts]}
listenAddress=${Login[externalAddress]}
configurationFolder=${mover.conf}/mqtt
dataFolder=${mover.mqtt}

[ECproxyPlugin]
listenAddress=${Login[externalAddress]}
publicAddress=${Login[externalAddress]}
port=${Ports[ecproxy]}
soTimeOut=600000
repository=${mover.data}
#sendBufferSize=128000
#receiveBufferSize=524288

#[FtpPASV]
#[FtpPORT]
#[FtpOPEN]

[RetrievalInputStream]
buffered=yes
interruptible=yes
monitored=1m

[ReplicationHost]
listenAddress=${Login[internalAddress]}

[ECauthModule]
listenAddress=${Login[internalAddress]}
connectionTimeout=30s
protocol=ssh
user=ecauth
pass=ecauth
hostListManagerDelay=10s
hostListManagerLifeTime=1h
hostListManagerFrequency=5m

[Filter]
pre.out.gzip=${mover.sh}/gzip $1 $2
pre.out.bzip2a=${mover.sh}/bzip2 $1 $2
pre.out.lbzip2=${mover.sh}/lbzip2 $1 $2
fly.out.lbzip2=lbzip2 -c
fly.in.lbzip2=lbzip2 -d

[FtpPlugin]
listenAddress=${Login[externalAddress]}
port=${Ports[ftp]}
soTimeOut=600000
dataTimeOut=600000
passive=yes
extended=yes
ext=
tail=${mover.title}
welcome=${mover.conf}/ftp/welcome.txt
browser=${mover.conf}/ftp/browser.txt
help=${mover.conf}/ftp/help.txt
hidden=
#restrictedUsers=
alwaysCheckOnRETR=yes

[FtpDomainList]
data=data:
*=*

[FTPPassiveSocket]
soTimeOut=300000

[FTPActiveSocket]
soTimeOut=300000
reuseAddress=yes

[ReportCommand]
mover=${mover.sh}/report
host=${mover.sh}/report $host $port $listenAddress

[TestModule]
errorsFrequency=1000
initialDownloadDelay=15
downloadedBytesPerSecond=1048576
initialUploadDelay=500
uploadedBytesPerSecond=1048576

[Other]
buffer=131072
tmp=${mover.tmp}

# Allow overriding some options/parameters in this file
#
#include "${mover.etc}/ecmwf.properties"
